{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from \"@/http/APIService\";\nimport router from \"../router\";\nconst apiService = new APIService();\nexport default {\n  data() {\n    return {\n      skills: [],\n      skillSize: 0,\n      showMsg: \"\"\n    };\n  },\n  mounted() {\n    this.getSkills();\n    this.showMessages();\n  },\n  methods: {\n    showMessages() {\n      if (this.$route.params.msg) {\n        this.showMsg = this.$route.params.msg;\n      }\n    },\n    getSkills() {\n      apiService.getSkillList().then(response => {\n        this.skills = response.data;\n        this.skillSize = this.skills.length;\n      }).catch(error => {\n        this.showMsg = \"error\";\n      });\n    },\n    addNewSkill() {\n      router.push(\"/skill-create\");\n    },\n    updateSkill(skill) {\n      router.push(\"/skill-create/\" + skill.id);\n    },\n    deleteSkill(skill) {\n      if (confirm(\"Do you really want to delete?\")) {\n        apiService.deleteSkill(skill.id).then(response => {\n          if (response.status === 204) {\n            router.push(\"/skill-list/deleted/\");\n            this.getSkills();\n            this.showMsg = \"deleted\";\n          }\n        }).catch(error => {\n          this.showMsg = \"error\";\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["APIService","router","apiService","data","skills","skillSize","showMsg","mounted","getSkills","showMessages","methods","$route","params","msg","getSkillList","then","response","length","catch","error","addNewSkill","push","updateSkill","skill","id","deleteSkill","confirm","status"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/skills_list_fe/src/components/SkillList.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n      <div class=\"row align-items-center justify-content-center\">\n        <div class=\"col-12 col-md-10 col-lg-10 col-12 align-items-center justify-content-center\">\n          <!-- Success and Error Messages -->\n          <div class=\"alert alert-success\" v-if=\"showMsg === 'new'\" :value=\"true\">\n            New skill added.\n          </div>\n  \n          <div class=\"alert alert-success\" v-if=\"showMsg === 'update'\" :value=\"true\">\n            Skill updated.\n          </div>\n  \n          <div class=\"alert alert-success\" v-if=\"showMsg === 'deleted'\" :value=\"true\">\n            Skill deleted.\n          </div>\n  \n          <div class=\"alert alert-danger\" v-if=\"showMsg === 'error'\" :value=\"true\">\n            Error connecting to server. Check server.\n          </div>\n        </div>\n      </div>\n  \n      <div class=\"row align-items-center justify-content-center\">\n        <div class=\"col col-12 col-md-10 d-none d-xl-block d-lg-block d-md-block\">\n          <!-- Skills Table -->\n          <table class=\"table table-hover\" style=\"overflow-y: auto\">\n            <thead>\n              <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Skill</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Update</th>\n                <th scope=\"col\">Delete</th>\n              </tr>\n            </thead>\n  \n            <tbody>\n              <tr v-for=\"skill in skills\" :key=\"skill.id\">\n                <th scope=\"row\">{{ skill.id }}</th>\n                <td>{{ skill.skill }}</td>\n                <td>{{ skill.description }}</td>\n                <td @click=\"updateSkill(skill)\">\n                  <button style=\"background-color: transparent; padding: 0\">\n                    <font-awesome-icon icon=\"pencil\" />\n                  </button>\n                </td>\n                <td @click=\"deleteSkill(skill)\">\n                  <button style=\"background-color: transparent; padding: 0\">\n                    <font-awesome-icon icon=\"trash\" />\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n  \n          <!-- Add New Skill Button -->\n          <div>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewSkill\">\n              Add New Skill\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script>\n  import { APIService } from \"@/http/APIService\";\n  import router from \"../router\";\n  \n  const apiService = new APIService();\n  \n  export default {\n    data() {\n      return {\n        skills: [],\n        skillSize: 0,\n        showMsg: \"\",\n      };\n    },\n  \n    mounted() {\n      this.getSkills();\n      this.showMessages();\n    },\n  \n    methods: {\n      showMessages() {\n        if (this.$route.params.msg) {\n          this.showMsg = this.$route.params.msg;\n        }\n      },\n  \n      getSkills() {\n        apiService\n          .getSkillList()\n          .then((response) => {\n            this.skills = response.data;\n            this.skillSize = this.skills.length;\n          })\n          .catch((error) => {\n            this.showMsg = \"error\";\n          });\n      },\n  \n      addNewSkill() {\n        router.push(\"/skill-create\");\n      },\n  \n      updateSkill(skill) {\n        router.push(\"/skill-create/\" + skill.id);\n      },\n  \n      deleteSkill(skill) {\n        if (confirm(\"Do you really want to delete?\")) {\n          apiService\n            .deleteSkill(skill.id)\n            .then((response) => {\n              if (response.status === 204) {\n                router.push(\"/skill-list/deleted/\");\n                this.getSkills();\n                this.showMsg = \"deleted\";\n              }\n            })\n            .catch((error) => {\n              this.showMsg = \"error\";\n            });\n        }\n      },\n    },\n  };\n  </script>\n\n<style scoped>\n.table > thead > tr > th {\n  background-color: rgb(190, 188, 190);\n}\n</style>"],"mappings":";AAmEE,SAASA,UAAS,QAAS,mBAAmB;AAC9C,OAAOC,MAAK,MAAO,WAAW;AAE9B,MAAMC,UAAS,GAAI,IAAIF,UAAU,CAAC,CAAC;AAEnC,eAAe;EACbG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,CAAC;MACZC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EAEDC,OAAO,EAAE;IACPD,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACE,MAAM,CAACC,MAAM,CAACC,GAAG,EAAE;QAC1B,IAAI,CAACP,OAAM,GAAI,IAAI,CAACK,MAAM,CAACC,MAAM,CAACC,GAAG;MACvC;IACF,CAAC;IAEDL,SAASA,CAAA,EAAG;MACVN,UAAS,CACNY,YAAY,CAAC,EACbC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACZ,MAAK,GAAIY,QAAQ,CAACb,IAAI;QAC3B,IAAI,CAACE,SAAQ,GAAI,IAAI,CAACD,MAAM,CAACa,MAAM;MACrC,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChB,IAAI,CAACb,OAAM,GAAI,OAAO;MACxB,CAAC,CAAC;IACN,CAAC;IAEDc,WAAWA,CAAA,EAAG;MACZnB,MAAM,CAACoB,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAEDC,WAAWA,CAACC,KAAK,EAAE;MACjBtB,MAAM,CAACoB,IAAI,CAAC,gBAAe,GAAIE,KAAK,CAACC,EAAE,CAAC;IAC1C,CAAC;IAEDC,WAAWA,CAACF,KAAK,EAAE;MACjB,IAAIG,OAAO,CAAC,+BAA+B,CAAC,EAAE;QAC5CxB,UAAS,CACNuB,WAAW,CAACF,KAAK,CAACC,EAAE,EACpBT,IAAI,CAAEC,QAAQ,IAAK;UAClB,IAAIA,QAAQ,CAACW,MAAK,KAAM,GAAG,EAAE;YAC3B1B,MAAM,CAACoB,IAAI,CAAC,sBAAsB,CAAC;YACnC,IAAI,CAACb,SAAS,CAAC,CAAC;YAChB,IAAI,CAACF,OAAM,GAAI,SAAS;UAC1B;QACF,CAAC,EACAY,KAAK,CAAEC,KAAK,IAAK;UAChB,IAAI,CAACb,OAAM,GAAI,OAAO;QACxB,CAAC,CAAC;MACN;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
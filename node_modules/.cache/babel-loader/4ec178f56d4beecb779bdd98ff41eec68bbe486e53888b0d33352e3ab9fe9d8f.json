{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from \"@/http/APIService\";\nconst apiService = new APIService();\nimport router from \"../router\";\nexport default {\n  data() {\n    return {\n      skills: {},\n      skillSize: 0,\n      showMsg: \"\"\n    };\n  },\n  mounted() {\n    this.getSkills();\n    this.showMessages();\n  },\n  methods: {\n    onResize() {\n      if (window.innerWidth > 600) this.isMobile = true;else this.isMobile = false;\n    },\n    showMessages() {\n      if (this.$route.params.msg) {\n        this.showMsg = this.$route.params.msg;\n      }\n    },\n    getSkills() {\n      apiService.getSkillList().then(response => {\n        this.skills = response.data;\n        this.skillsSize = this.skills.length;\n      }).catch(error => {\n        this.showMsg = \"error\";\n      });\n    },\n    addNewSkill() {\n      router.push(\"/skill-create\");\n    },\n    updateSkill(skill) {\n      router.push(\"/skill-create/\" + skill.id);\n    },\n    deleteSkill(skill) {\n      if (confirm(\"Do you really want to delete?\")) {\n        apiService.deleteSkill(skill.id).then(response => {\n          if (response.status === 204) {\n            router.push(\"/skill-list/deleted/\");\n            this.getSkills();\n            this.showMsg = \"deleted\";\n          }\n        }).catch(error => {\n          this.showMsg = \"error\";\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["APIService","apiService","router","data","skills","skillSize","showMsg","mounted","getSkills","showMessages","methods","onResize","window","innerWidth","isMobile","$route","params","msg","getSkillList","then","response","skillsSize","length","catch","error","addNewSkill","push","updateSkill","skill","id","deleteSkill","confirm","status"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/skills_list_fe/src/components/SkillList.vue"],"sourcesContent":["<template>\n     \n    <div class=\"container-fluid\">\n             \n      <div class=\"row align-items-center justify-content-center\">\n                       \n        <div\n          class=\"col-12 col-md-10 col-lg-10 col-12 align-items-center justify-content-center\"\n        >\n                         \n          <div\n            class=\"alert alert-success\"\n            v-if=\"showMsg === 'new'\"\n             :value=\"true\"\n          >\n                                New skill added.                \n          </div>\n  \n                         \n          <div\n            class=\"alert alert-success\"\n              \n             v-if=\"showMsg === 'update'\"\n             \n             :value=\"true\"\n          >\n                                Skill updated.                \n          </div>\n  \n                         \n          <div\n            class=\"alert alert-success\"\n             \n             v-if=\"showMsg === 'deleted'\"\n             :value=\"true\"\n          >\n                                Skill deleted.                \n          </div>\n  \n                         \n          <div\n            class=\"alert alert-danger\"\n              \n             v-if=\"showMsg === 'error'\"\n             :value=\"true\"\n          >\n                                Error connecting to server. Check server.        \n                   \n          </div>\n  \n                     \n        </div>\n  \n               \n      </div>\n  \n             \n      <div class=\"row align-items-center justify-content-center\">\n                   \n        <div class=\"col col-12 col-md-10 d-none d-xl-block d-lg-block d-md-block\">\n                         \n          <table class=\"table table-hover\" style=\"overflow-y: auto\">\n                               \n            <thead>\n                                 \n              <tr>\n                                       \n                <th scope=\"col\">ID</th>\n  \n                                       \n                <th scope=\"col\">Skill</th>\n  \n                                       \n                <th scope=\"col\">Description</th>\n  \n                                       \n                <th scope=\"col\">Update</th>\n  \n                                       \n                <th scope=\"col\">Delete</th>\n  \n                                   \n              </tr>\n  \n                                 \n            </thead>\n  \n                               \n            <tbody>\n                                 \n              <tr v-for=\"skill in skills\" v-bind:key=\"skill\">\n                                     \n                <th scope=\"row\">{{ skill.id }}</th>\n  \n                                       \n                <td>{{ skill.skill }}</td>\n  \n                                       \n                <td>{{ skill.description }}</td>\n  \n                                       \n                <td @click=\"updateSkill(skill)\">\n                                             \n                  <button style=\"background-color: transparent; padding: 0\">\n                                                   \n                    <font-awesome-icon icon=\"pencil\" />\n  \n                                               \n                  </button>\n  \n                                         \n                </td>\n  \n                                       \n                <td @click=\"deleteSkill(skill)\">\n                                             \n                  <button style=\"background-color: transparent; padding: 0\">\n                                                   \n                    <font-awesome-icon icon=\"trash\" />\n  \n                                               \n                  </button>\n  \n                                         \n                </td>\n  \n                                   \n              </tr>\n  \n                                 \n            </tbody>\n  \n                           \n          </table>\n  \n                         \n          <div>\n                               \n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewSkill\">\n              Add New Skill\n            </button>\n  \n                           \n          </div>\n  \n                     \n        </div>\n  \n               \n      </div>\n  \n         \n    </div>\n  \n     \n  </template>\n  \n     \n  <script>\n  import { APIService } from \"@/http/APIService\";\n  \n  const apiService = new APIService();\n  \n  import router from \"../router\";\n  \n  export default {\n    data() {\n      return {\n        skills: {},\n  \n        skillSize: 0,\n  \n        showMsg: \"\",\n      };\n    },\n  \n    mounted() {\n      this.getSkills();\n  \n      this.showMessages();\n    },\n  \n    methods: {\n      onResize() {\n        if (window.innerWidth > 600) this.isMobile = true;\n        else this.isMobile = false;\n      },\n  \n      showMessages() {\n        if (this.$route.params.msg) {\n          this.showMsg = this.$route.params.msg;\n        }\n      },\n  \n      getSkills() {\n        apiService\n  \n          .getSkillList()\n  \n          .then((response) => {\n            this.skills = response.data;\n  \n            this.skillsSize = this.skills.length;\n          })\n  \n          .catch((error) => {\n            this.showMsg = \"error\";\n          });\n      },\n  \n      addNewSkill() {\n        router.push(\"/skill-create\");\n      },\n  \n      updateSkill(skill) {\n        router.push(\"/skill-create/\" + skill.id);\n      },\n  \n      deleteSkill(skill) {\n        if (confirm(\"Do you really want to delete?\")) {\n          apiService\n            .deleteSkill(skill.id)\n            .then((response) => {\n              if (response.status === 204) {\n                router.push(\"/skill-list/deleted/\");\n  \n                this.getSkills();\n  \n                this.showMsg = \"deleted\";\n              }\n            })\n            .catch((error) => {\n              this.showMsg = \"error\";\n            });\n        }\n      },\n    },\n  };\n  </script>\n  \n   \n  <style>\n  .table > thead > tr > th {\n    background-color: rgb(190, 188, 190);\n  }\n</style>\n  "],"mappings":";AA+JE,SAASA,UAAS,QAAS,mBAAmB;AAE9C,MAAMC,UAAS,GAAI,IAAID,UAAU,CAAC,CAAC;AAEnC,OAAOE,MAAK,MAAO,WAAW;AAE9B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CAAC,CAAC;MAEVC,SAAS,EAAE,CAAC;MAEZC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;IAEhB,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EAEDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAIC,MAAM,CAACC,UAAS,GAAI,GAAG,EAAE,IAAI,CAACC,QAAO,GAAI,IAAI,MAC5C,IAAI,CAACA,QAAO,GAAI,KAAK;IAC5B,CAAC;IAEDL,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACM,MAAM,CAACC,MAAM,CAACC,GAAG,EAAE;QAC1B,IAAI,CAACX,OAAM,GAAI,IAAI,CAACS,MAAM,CAACC,MAAM,CAACC,GAAG;MACvC;IACF,CAAC;IAEDT,SAASA,CAAA,EAAG;MACVP,UAAS,CAENiB,YAAY,CAAC,EAEbC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAAChB,MAAK,GAAIgB,QAAQ,CAACjB,IAAI;QAE3B,IAAI,CAACkB,UAAS,GAAI,IAAI,CAACjB,MAAM,CAACkB,MAAM;MACtC,CAAC,EAEAC,KAAK,CAAEC,KAAK,IAAK;QAChB,IAAI,CAAClB,OAAM,GAAI,OAAO;MACxB,CAAC,CAAC;IACN,CAAC;IAEDmB,WAAWA,CAAA,EAAG;MACZvB,MAAM,CAACwB,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAEDC,WAAWA,CAACC,KAAK,EAAE;MACjB1B,MAAM,CAACwB,IAAI,CAAC,gBAAe,GAAIE,KAAK,CAACC,EAAE,CAAC;IAC1C,CAAC;IAEDC,WAAWA,CAACF,KAAK,EAAE;MACjB,IAAIG,OAAO,CAAC,+BAA+B,CAAC,EAAE;QAC5C9B,UAAS,CACN6B,WAAW,CAACF,KAAK,CAACC,EAAE,EACpBV,IAAI,CAAEC,QAAQ,IAAK;UAClB,IAAIA,QAAQ,CAACY,MAAK,KAAM,GAAG,EAAE;YAC3B9B,MAAM,CAACwB,IAAI,CAAC,sBAAsB,CAAC;YAEnC,IAAI,CAAClB,SAAS,CAAC,CAAC;YAEhB,IAAI,CAACF,OAAM,GAAI,SAAS;UAC1B;QACF,CAAC,EACAiB,KAAK,CAAEC,KAAK,IAAK;UAChB,IAAI,CAAClB,OAAM,GAAI,OAAO;QACxB,CAAC,CAAC;MACN;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}